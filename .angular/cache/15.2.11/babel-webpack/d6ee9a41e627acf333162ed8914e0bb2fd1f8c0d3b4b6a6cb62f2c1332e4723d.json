{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.URL = 'http://localhost:3500';\n  }\n  auth(request) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    let options = {\n      headers: headers\n    };\n    return this.http.post(`${this.URL}/login`, request, options);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,QAAG,GAAG,uBAAuB;EAEG;EAEjCC,IAAI,CAACC,OAAkB;IAC5B,IAAIC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAC5B,cAAc,EAAE;KAAmB,CAAC;IACtC,IAAIO,OAAO,GAAG;MAAED,OAAO,EAAEA;IAAO,CAAE;IAClC,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAM,GAAG,IAAI,CAACC,GAAG,QAAQ,EAAEJ,OAAO,EAAEE,OAAO,CAAC;EACnE;EAAC;qBAVUN,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAS,SAAXT,WAAW;IAAAU,YAFV;EAAM","names":["HttpHeaders","AuthService","constructor","http","auth","request","headers","options","post","URL","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DENNIS RIOS\\Documents\\workspace\\spd-front\\src\\app\\shared\\services\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { AuthLogin } from '../../model/auth.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private URL = 'http://localhost:3500';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public auth(request: AuthLogin): Observable<any> {\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'});\r\n    let options = { headers: headers };\r\n    return this.http.post<any>(`${this.URL}/login`, request, options)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}